---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import Header from '../components/Header.astro';

type BlogData = CollectionEntry<'blog'>['data'];

type ExtraProps = {
  heroImageLink?: string;
  heroImageAlt?: string;
  pageTitle?: string;   // ✅ titre visible dans la page
  hideTitle?: boolean;  // ✅ option pour masquer le titre
};

type Props = BlogData & ExtraProps;

const {
  title,
  description,
  pubDate,
  updatedDate,
  heroImage,
  heroImageLink,
  heroImageAlt,
  pageTitle,
  hideTitle
} = Astro.props as Props;
---

<html lang="fr">
  <head>
    <BaseHead
      title={title}                
      description={description}
      image={heroImage}
      imageAlt={heroImageAlt}
      ogType="article"
    />
    <style>
      main {
        width: calc(100% - 2em);
        max-width: 100%;
        margin: 0;
      }
      .hero-image {
        max-width: clamp(560px, 80vw, 720px);
        margin: 0 auto 1rem;
      }
      .hero-image img {
        display: block;
        margin: 0 auto;
        border-radius: 12px;
        box-shadow: var(--box-shadow);
        max-width: 100%;
        height: auto;
      }
      .prose {
        width: 720px;
        max-width: calc(100% - 2em);
        margin: auto;
        padding: 1em;
        color: rgb(var(--gray-dark));
      }
      
      .title {
        margin-bottom: 1em;
        padding: 1em 0;
        text-align: center;
        line-height: 1;
      }
 
      .date {
        margin-bottom: 0.5em;
        color: rgb(var(--gray));
      }
      .last-updated-on {
        font-style: italic;
      }
      .badge-amazon {
        position: absolute;
        right: 16px;
        top: 16px;
        background: #ff9900;
        color: #222;
        font-weight: bold;
        padding: 4px 10px;
        border-radius: 6px;
        font-size: 0.95em;
        box-shadow: 0 2px 6px #e5e5e5;
        z-index: 2;
        transition: opacity 0.2s;
        pointer-events: none;
        opacity: 0.9;
        display: inline-flex;
        align-items: center;
        white-space: nowrap;
      }
      .hero-image-link:hover .badge-amazon {
        opacity: 1;
      }
      .hero-image-link {
        position: relative;
        display: block;
      }

/* Titre principal de l’article */
.title h1 {
  margin: 0 0 0.5em;
  font-size: clamp(1.6rem, 2vw + 1rem, 2.2rem); /* ↓ un peu plus petit qu'avant */
  font-weight: 700;
  line-height: 1.2;
}

/* Sous-titres dans le contenu (slot Markdown) */
:global(.prose h2) {
  font-size: 1.8rem;   /* ↑ plus grand */
  margin-top: 1.6rem;
  margin-bottom: 0.9rem;
  line-height: 1.3;
}

:global(.prose h3) {
  font-size: 1.45rem;  /* ↑ plus grand */
  margin-top: 1.3rem;
  margin-bottom: 0.7rem;
  line-height: 1.3;
}

:global(.prose h4) {
  font-size: 1.2rem;   /* ↑ un peu plus grand */
  margin-top: 1.1rem;
  margin-bottom: 0.6rem;
  line-height: 1.35;
}

    </style>
  </head>
  <body>
    <Header />
    <main>
      <article>
        <!-- ❌ On supprime l'ancien <h1>{pageTitle}</h1> ici pour éviter le doublon -->

        <div class="hero-image">
          {heroImage && (
            heroImageLink ? (
              <a href={heroImageLink} target="_blank" rel="noopener sponsored noreferrer"
                class="hero-image-link" aria-label={`Voir le livre sur Amazon`}>
                <img
                  src={heroImage}
                  alt={heroImageAlt || `Couverture : ${title}`}
                  width="1020"
                  height="510"
                />
                <span class="badge-amazon">Voir sur Amazon</span>
              </a>
            ) : (
              <img
                src={heroImage}
                alt={heroImageAlt || `Couverture : ${title}`}
                width="1020"
                height="510"
              />
            )
          )}
        </div>

        <div class="prose">
          {!hideTitle && (
            <div class="title">
              <div class="date">
                <FormattedDate date={pubDate} />
                {updatedDate && (
                  <div class="last-updated-on">
                    Dernière mise à jour : <FormattedDate date={updatedDate} />
                  </div>
                )}
              </div>

              <!-- ✅ Un seul H1 : on affiche pageTitle s'il existe, sinon title -->
              <h1>{pageTitle ?? title}</h1>
              <hr />
            </div>
          )}

          <slot />
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html>
